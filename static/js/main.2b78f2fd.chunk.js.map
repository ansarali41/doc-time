{"version":3,"sources":["fakeData/fakeData.js","components/Login/firebase.config.js","components/Login/LoginManager.js","components/Header/Header.js","components/TravelingLocation/TravelingLocation.js","Footer/Footer.js","components/Home/Home.js","components/PageNotFound/PageNotFound.js","components/Booking/Booking.js","components/GoogleMap/GoogleMap.js","components/NearestHospital/NearestHospital.js","components/Login/Login.js","components/PrivateRoute/PrivateRoute.js","components/Progress/Progress.js","components/Contact/Contact.js","components/Helpline/Helpline.js","App.js","serviceWorker.js","index.js","image/brand_logo.png"],"names":["fakeData","id","name","shortDescription","fullDescription","photo","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","updateUserName","firebase","currentUser","updateProfile","displayName","catch","error","console","log","verifyEmail","updateEmail","then","Header","navBarColor","logoColor","useContext","UserContext","loggedInUser","setLoggedInUser","userDetails","localStorage","getItem","location","useLocation","locationName","useParams","pathname","filter","className","Navbar","bg","variant","Brand","href","to","style","src","logo","alt","Nav","Form","inline","Button","onClick","signOut","email","res","removeItem","TravelingLocation","props","Card","width","height","Img","borderRadius","Footer","background","display","alignItems","Date","getFullYear","Home","useState","locations","overflowX","backgroundImage","backgroundSize","backgroundPosition","textAlign","color","e","Grid","container","direction","justify","map","loc","key","PageNotFound","Booking","React","modalShow","setModalShow","locationInfo","setLocationInfo","newLocation","find","useEffect","useForm","register","handleSubmit","errors","onSubmit","data","htmlFor","placeholder","ref","required","origin","defaultValue","type","min","max","value","MyVerticallyCenteredModal","show","onHide","Modal","size","aria-labelledby","centered","closeButton","Title","Body","mapStyles","mapPosition","lat","lng","GoogleMap","google","this","zoom","initialCenter","position","Component","GoogleApiWrapper","NearestHospital","place","Login","length","history","useHistory","from","state","isCreateAccount","setIsCreateAccount","createAccountForm","setMessage","message","userEmail","setUserEmail","watch","resetPassword","sendPasswordResetEmail","handleResetPassword","newMessage","firstName","lastName","password","createUserWithEmailAndPassword","createNewUserAccount","signInWithEmailAndPassword","userLoginHandler","replace","pattern","minLength","maxLength","validate","repeatPassword","cursor","googleProvider","GoogleAuthProvider","signInWithPopup","result","user","errorMessage","handleGoogleSignIn","setItem","JSON","stringify","PrivateRoute","children","rest","render","Progress","marginTop","Contact","icon","faEnvelope","faUser","faEnvelopeSquare","faSms","Helpline","justifyContent","createContext","App","parseUser","parse","Provider","path","exact","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.2b78f2fd.chunk.js","sourcesContent":["var fakeData = [\n    {\n        id: 1,\n        name: 'covid 19 vaccine',\n        shortDescription: 'Bangladesh began the administration of COVID-19 vaccines on 27 January 2021 while mass vaccination started on 7 February 2021...',\n        fullDescription: `Less than 10% of the country’s population has been fully vaccinated despite the frantic efforts of the government.\n            Bangladesh launched its nationwide vaccination campaign on this February 7 this year and the government had managed to fully vaccinate 14,820,442 people as of Sunday evening, against a population of 168.22 million.\n            \n            According to data from the Directorate General of Health Services (DGHS), a total 22,494,565 people had received their first dose of a vaccine as of Sunday, while 7,674,123 were waiting for their second dose`,\n        photo: 'https://i.ibb.co/Br8qc7q/vaccine.jpg',\n    },\n    {\n        id: 2,\n        name: 'Dental',\n        shortDescription:\n            'When it comes to dental treatments, it might sometimes sound like your dental benefit plan is speaking a different language. If your dentist mentions these ...',\n        fullDescription:\n            'When it comes to dental treatments, it might sometimes sound like your dental benefit plan is speaking a different language. If your dentist mentions these terms, you can ask questions, but your dental plan documents may not give you the answers you need immediately. That’s why we created this guide to terms frequently used in dental benefit plans and the more common terms most non-dentists use when talking about them. Want to learn more about a particular topic? Click the link for more information.',\n        photo: 'https://i.ibb.co/WkL077T/Dentist-1.jpg',\n    },\n    {\n        id: 3,\n        name: 'Ear nose and throat',\n        shortDescription:\n            \"If you have a health problem with your head or neck, your doctor might recommend that you see an otolaryngologist. That's someone who treats issues in your ears, nose, or throat as well as related areas in your head and neck. They're called ENT's for short\",\n        fullDescription: `If you have a health problem with your head or neck, your doctor might recommend that you see an otolaryngologist. That's someone who treats issues in your ears, nose, or throat as well as related areas in your head and neck. They're called ENT's for short. Common treatments include beclometasone nasal spray for congestion, miconazole gel for oral thrush and flurbiprofen lozenges for sore throat...`,\n        photo: 'https://i.ibb.co/K2XD3j1/ent-procedure-1.jpg',\n    },\n    {\n        id: 4,\n        name: 'Migraines',\n        shortDescription:\n            'Many people who have migraines find that over-the-counter painkillers, such as paracetamol, aspirin and ibuprofen, can help to reduce their symptoms. They tend ...',\n        fullDescription: `Many people who have migraines find that over-the-counter painkillers, such as paracetamol, aspirin and ibuprofen, can help to reduce their symptoms. They tend to be most effective if taken at the first signs of a migraine attack, as this gives them time to absorb into your bloodstream and ease your symptoms.\n\n        It's not advisable to wait until the headache worsens before taking painkillers, as it's often too late for the medicine to work.\n        \n        Tablets you dissolve in a glass of water (soluble painkillers) are a good alternative because they're absorbed quickly by your body.`,\n        photo: 'https://i.ibb.co/mhCqXHP/images.jpg',\n    },\n    {\n        id: 5,\n        name: 'back pain ',\n        shortDescription:\n            'Non-steroidal anti-inflammatory drug (NSAID) tablets, such as ibuprofen, can help relieve back pain. Many types are available to buy from pharmacies or ......',\n        fullDescription:\n            'Non-steroidal anti-inflammatory drug (NSAID) tablets, such as ibuprofen, can help relieve back pain. Many types are available to buy from pharmacies or. use when talking about them. Want to learn more about a particular topic? Click the link for more information.',\n        photo: 'https://i.ibb.co/Vv2BnxC/download.jpg',\n    },\n    {\n        id: 6,\n        name: 'physiotherapy',\n        shortDescription:\n            \"If you have a health problem with your head or neck, your doctor might recommend that you see an otolaryngologist. That's someone who treats issues in your ears, nose, or throat as well as related areas in your head and neck. They're called ENT's for short\",\n        fullDescription: `If you have a health problem with your head or neck, your doctor might recommend that you see an otolaryngologist. That's someone who treats issues in your ears, nose, or throat as well as related areas in your head and neck. They're called ENT's for short. Common treatments include beclometasone nasal spray for congestion, miconazole gel for oral thrush and flurbiprofen lozenges for sore throat...`,\n        photo: 'https://i.ibb.co/yfgbgpy/Physiotherapist-Job-Description.jpg',\n    },\n];\n\nexport default fakeData;\n","const firebaseConfig = {\n    apiKey: 'AIzaSyAPVFgkzL_SUseD0jL9ZkMwkvlrraxPB_g',\n    authDomain: 'doctime-4351c.firebaseapp.com',\n    projectId: 'doctime-4351c',\n    storageBucket: 'doctime-4351c.appspot.com',\n    messagingSenderId: '254870186168',\n    appId: '1:254870186168:web:94673dd89a660265246c4d',\n};\nexport default firebaseConfig;\n","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebase.config';\n\nexport const initializeFirebase = () => {\n    if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n    }\n}\n\n// google sign in handler\nexport const handleGoogleSignIn = () => {\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\n    return firebase.auth().signInWithPopup(googleProvider).then(function (result) {\n        const user = result.user;\n        const { displayName, email } = user;\n        const signedInUser = {\n            name: displayName,\n            email: email\n        }\n        return signedInUser;\n    })\n        .catch(function (error) {\n            var errorMessage = error.message;\n            console.log(errorMessage);\n        });\n}\n\n// facebook sign in\nexport const handleFacebookSignIn = () => {\n    const fbProvider = new firebase.auth.FacebookAuthProvider();\n    return firebase.auth().signInWithPopup(fbProvider).then(function (result) {\n        const user = result.user;\n        const { displayName, email } = user;\n        const signedInUser = {\n            name: displayName,\n            email: email\n        }\n        return signedInUser;\n    })\n        .catch(function (error) {\n            var errorMessage = error.message;\n            console.log(errorMessage);\n        });\n}\n\n// creating new user account\nexport const createNewUserAccount = (name, email, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\n        .then(res => {\n            updateUserName(name);\n            verifyEmail();\n            const newMessage = {\n                error: \"Successfully created account,Please Verify your account, Check your email inbox\"\n            }\n            return newMessage;\n        })\n        .catch(function (error) {\n            const newMessage = {\n                error: \"This email has already an account\"\n            }\n            return newMessage;\n        });\n}\n\n// user login handler\nexport const userLoginHandler = (email, password) => {\n    return firebase.auth().signInWithEmailAndPassword(email, password)\n        .then(res => {\n            const newUser = {\n                name: firebase.auth().currentUser.displayName,\n                email: email\n            }\n            return newUser;\n        })\n        .catch(function (error) {\n            const newMessage = {\n                error: \"Wrong password !\"\n            }\n            return newMessage;\n        });\n}\n\n// user logOut section\nexport const logOutHandler = () => {\n    return firebase.auth().signOut().then(function () {\n        const loggedOutUser = {\n            name: '',\n            email: ''\n        }\n        return loggedOutUser;\n\n    }).catch(function (error) {\n        // An error happened.\n    });\n}\n\n// reset password\nexport const handleResetPassword = (email) => {\n    return firebase.auth().sendPasswordResetEmail(email)\n        .then(function () {\n            const newMessage = {\n                error: \"To reset Password check your email inbox\"\n            }\n            return newMessage;\n        }).catch(function (error) {\n            return error;\n        });\n}\n\n// update user name\nconst updateUserName = name => {\n    const user = firebase.auth().currentUser;\n    user.updateProfile({\n        displayName: name,\n    }).catch((error) => {\n        console.log(error);\n    });\n}\n\n// email verification\nconst verifyEmail = () => {\n    var user = firebase.auth().currentUser;\n    user.updateEmail(\"user@example.com\").then(function () {\n        // Update successful.\n    }).catch(function (error) {\n        // An error happened.\n    });\n}","import React, { useContext } from 'react';\nimport { Form, Nav, Navbar, Button } from 'react-bootstrap';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { UserContext } from '../../App';\nimport logo from '../../image/brand_logo.png';\nimport './Header.css';\nimport { logOutHandler } from '../Login/LoginManager';\n\nconst Header = () => {\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n    // user logOutHandler\n    const userLogOutHandler = () => {\n        logOutHandler().then(res => {\n            localStorage.removeItem('user');\n            setLoggedInUser(res);\n        });\n    };\n    const userDetails = localStorage.getItem('user');\n    // dynamic header color\n    const location = useLocation();\n    const { locationName } = useParams();\n    let navBarColor;\n    let logoColor;\n    if (location.pathname === '/home' || location.pathname === `/booking/${locationName}` || location.pathname === '/') {\n        navBarColor = 'dark';\n        logoColor = {\n            filter: 'invert(100%)',\n        };\n    } else {\n        navBarColor = 'light';\n        logoColor = {};\n    }\n    //    light=black , dark=white filter: invert(100%);\n\n    return (\n        <div className=\"header-container\">\n            <Navbar bg=\"transparent\" variant={navBarColor}>\n                <Navbar.Brand href=\"\">\n                    <Link to=\"/home\">\n                        <img style={logoColor} className=\"logo-img\" src={logo} alt=\"\" />\n                    </Link>\n                </Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Form inline></Form>\n                </Nav>\n                <Nav>\n                    <Link className=\"nav-link\" to=\"/home\">\n                        Home\n                    </Link>\n                    <Link className=\"nav-link\" to=\"/nearestHospital\">\n                        Map\n                    </Link>\n                    <Link className=\"nav-link\" to=\"/helpline\">\n                        helpline\n                    </Link>\n                    <Link className=\"nav-link\" to=\"/contact\">\n                        Contact\n                    </Link>\n                    {loggedInUser.name && (\n                        <Link className=\"nav-link\" to=\"/\">\n                            {loggedInUser.name || userDetails.name}\n                        </Link>\n                    )}\n                    {loggedInUser.name ? (\n                        <Link className=\"nav-link\" to=\"/login\">\n                            <Button onClick={userLogOutHandler} variant=\"success\">\n                                Logout\n                            </Button>\n                        </Link>\n                    ) : (\n                        <Link className=\"nav-link\" to=\"/login\">\n                            <Button variant=\"success\">Login</Button>\n                        </Link>\n                    )}\n                </Nav>\n            </Navbar>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport './TravelingLocation.css';\nimport { Link } from 'react-router-dom';\n\nconst TravelingLocation = props => {\n    const { name, photo } = props.location;\n\n    return (\n        <Card style={{ width: '18rem' }} className=\"img-container\">\n            <Link to={`/booking/${name}`} style={{ height: '100%', width: '100%' }}>\n                <Card.Img variant=\"top\" src={photo} style={{ height: '100%', width: '100%', borderRadius: 15 }} />\n            </Link>\n\n            <div className=\"centered\">\n                <h3>{name}</h3>\n            </div>\n        </Card>\n    );\n};\n\nexport default TravelingLocation;\n","import React from 'react';\r\nimport './Footer.css';\r\nimport logo from '../image/brand_logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"section footer-classic context-dark bg-image py-4 pl-5\" style={{ background: ' #343A40' }}>\r\n            <div className=\"container\">\r\n                <div className=\"row row-30\">\r\n                    <div className=\"col-md-4 col-xl-5\" style={{ display: 'flex', alignItems: 'center' }}>\r\n                        <div className=\"pr-xl-4\">\r\n                            <Link className=\"brand pt-3 pb-3\" to=\"/\">\r\n                                <img className=\"logo-img\" src={logo} alt=\"\" />\r\n                            </Link>\r\n                            <p>Best Doctors are here</p>\r\n                            <p className=\"rights\">\r\n                                <span>©  </span>\r\n                                <span className=\"copyright-year\">{new Date().getFullYear()}</span>\r\n                                <span>. </span>\r\n                                <span>All Rights Reserved.</span>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4\">\r\n                        <h5>Contacts</h5>\r\n                        <dl className=\"contact-list\">\r\n                            <dt>Address:</dt>\r\n                            <dd>Dhaka, Bangladesh</dd>\r\n                        </dl>\r\n                        <dl className=\"contact-list\">\r\n                            <dd>\r\n                                <a href=\"mailto:#\">doctime@gmail.com</a>\r\n                            </dd>\r\n                        </dl>\r\n                        <dl className=\"contact-list\">\r\n                            <dd>+88387983783</dd>\r\n                        </dl>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-xl-3\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"nav-list\">\r\n                            <li>\r\n                                <a href=\"/\">About</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/\">Awards</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/\">Contacts</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/\">Our Success</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { Grid } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport fakeData from '../../fakeData/fakeData';\nimport Header from '../Header/Header';\nimport TravelingLocation from '../TravelingLocation/TravelingLocation';\nimport './home.css';\nimport { Button } from 'react-bootstrap';\nimport Footer from '../../Footer/Footer';\nimport { Link } from 'react-router-dom';\n\nconst Home = () => {\n    const [locations, setLocations] = useState(fakeData);\n    return (\n        <div style={{ overflowX: 'hidden' }}>\n            <div\n                style={{\n                    backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n            url('https://i.ibb.co/qpM3Y9s/main-Banner.jpg')`,\n                    height: '400px',\n                    backgroundSize: 'cover',\n                    backgroundPosition: 'center',\n                    width: '100vw',\n                    textAlign: 'center',\n                }}\n            >\n                <Header></Header>\n                <h3 style={{ color: 'white' }} e>\n                    Welcome To Doc Time\n                </h3>\n                <div className=\"pt-5\">\n                    <Link to=\"/contact\">\n                        <Button variant=\"success w-25\">Contact Us</Button>\n                    </Link>\n                </div>\n            </div>\n            <div className=\"container pb-5 text-center\">\n                <h3 className=\" pt-3\">Choose Our Service</h3>\n                <Grid container direction=\"row\" justify=\"center\" className=\"locations-container \">\n                    {locations.map(loc => (\n                        <TravelingLocation location={loc} key={loc.id}></TravelingLocation>\n                    ))}\n                </Grid>\n            </div>\n            <Footer />\n        </div>\n    );\n};\n\nexport default Home;\n","import React from 'react';\nimport Header from '../Header/Header';\n\nconst PageNotFound = () => {\n    return (\n        <div>\n            <Header></Header>\n            <div style={{color: 'red', textAlign: 'center'}}>\n            <h1>page not found! <br/> error 404!</h1>\n        </div>\n        </div>\n    );\n};\n\nexport default PageNotFound;","import React, { useEffect, useState } from 'react';\nimport { Button, Modal } from 'react-bootstrap';\nimport { useForm } from 'react-hook-form';\nimport { Link, useParams } from 'react-router-dom';\nimport fakeData from '../../fakeData/fakeData';\nimport Header from '../Header/Header';\nimport './Booking.css';\n\nconst Booking = () => {\n    const { locationName } = useParams();\n    const [modalShow, setModalShow] = React.useState(false);\n    const [locationInfo, setLocationInfo] = useState([]);\n    const newLocation = fakeData.find(loc => loc.name === locationName);\n    useEffect(() => {\n        setLocationInfo(newLocation);\n    }, []);\n\n    const { register, handleSubmit, errors } = useForm();\n    const onSubmit = data => console.log(data);\n\n    return (\n        <div\n            style={{\n                backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)),\n            url('https://i.ibb.co/Cst11zY/home2.jpg')`,\n                height: '100vh',\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n                width: '100vw',\n            }}\n        >\n            <Header></Header>\n            <div className=\"booking-container\">\n                <div className=\"booking-location-details \">\n                    {locationInfo.name && <h1>{locationInfo.name}</h1>}\n                    {locationInfo.name && <p>{locationInfo.fullDescription}</p>}\n                </div>\n                <div className=\"booking-form\">\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                        <label htmlFor=\"name\">Your Name:</label>\n                        <input name=\"name\" placeholder=\"Enter Your Name\" ref={register({ required: true })} /> <br />\n                        {errors.origin && <span style={{ color: 'red' }}>This field is required</span>}\n                        <br />\n                        <label htmlFor=\"Service\">Service:</label>\n                        <input name=\"service\" defaultValue={locationInfo.name} ref={register({ required: true })} /> <br />\n                        {errors.location && <span style={{ color: 'red' }}>This field is required</span>}\n                        <br />\n                        <div className=\"date-input\">\n                            <label htmlFor=\"date\">Date:</label>\n                            <input type=\"date\" id=\"date\" name=\"date\" defaultValue={new Date()} min=\"2021-10-18\" max=\"2022-10-25\" />\n                        </div>\n                        <br />\n                        <input className=\"submit-btn\" type=\"submit\" value=\"Get Appointment\" onClick={() => setModalShow(true)} />\n                    </form>\n                    <MyVerticallyCenteredModal show={modalShow} onHide={() => setModalShow(false)} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Booking;\n\nfunction MyVerticallyCenteredModal(props) {\n    return (\n        <Modal {...props} size=\"lg\" aria-labelledby=\"contained-modal-title-vcenter\" centered>\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">Conformation</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <h4>Congratulations!</h4>\n                <p>You Appointment is placed in our List. We will contact you soon.Stay with DocTime .thank you</p>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n","import React, { Component } from 'react';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport './GoogleMap.css';\nimport { useParams } from 'react-router-dom';\n\nconst mapStyles = {\n    width: '100%',\n    height: '630px',\n    borderRadius: '10px',\n};\nconst mapPosition = {\n    lat: 23.7252,\n    lng: 90.3975,\n};\n\nexport class GoogleMap extends Component {\n    render() {\n        return (\n            <Map google={this.props.google} zoom={15} style={mapStyles} initialCenter={mapPosition} className=\"mapContainerWrapper\">\n                <Marker position={mapPosition} />\n            </Map>\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyCFF-0W7KqZroCvRYQ744etOSxRDPtjfIU',\n})(GoogleMap);\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport GoogleMap from '../GoogleMap/GoogleMap';\nimport Header from '../Header/Header';\nimport './NearestHospital.css';\n\nconst NearestHospital = () => {\n    const { place } = useParams();\n    return (\n        <div>\n            <Header></Header>\n            <div className=\"hotelsAndMap-container\">\n                <div className=\"google-map-container\" style={{ width: '100%' }}>\n                    <GoogleMap></GoogleMap>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default NearestHospital;\n","import React, { useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport './Login.css';\nimport { UserContext } from '../../App';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { initializeFirebase, handleGoogleSignIn, handleFacebookSignIn, createNewUserAccount, userLoginHandler, handleResetPassword } from './LoginManager';\nimport Header from '../Header/Header';\n\nconst Login = () => {\n    initializeFirebase();\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n    const history = useHistory();\n    const location = useLocation();\n    const { from } = location.state || { from: { pathname: '/' } };\n\n    // google sign\n    const googleSignIn = () => {\n        handleGoogleSignIn().then(res => {\n            setLoggedInUser(res);\n            localStorage.setItem('user', JSON.stringify(res));\n\n            history.replace(from);\n        });\n    };\n\n    // user sign in and create a new account\n    const [isCreateAccount, setIsCreateAccount] = useState(false);\n    const createAccountForm = isCreateAccount => {\n        setIsCreateAccount(isCreateAccount);\n        setMessage({});\n    };\n\n    const [message, setMessage] = useState({});\n    const [userEmail, setUserEmail] = useState({});\n\n    //login and create account form handle here\n    const { register, handleSubmit, errors, watch } = useForm();\n    const onSubmit = data => {\n        const { firstName, lastName, email, password } = data;\n        const name = firstName + ' ' + lastName;\n\n        // creating new user account\n        if (isCreateAccount && email && password) {\n            createNewUserAccount(name, email, password).then(res => {\n                setMessage(res);\n            });\n        }\n\n        // user login\n        if (!isCreateAccount && email && password) {\n            setUserEmail(email);\n\n            userLoginHandler(email, password).then(res => {\n                if (res.name) {\n                    setLoggedInUser(res);\n                    history.replace(from);\n                } else {\n                    setMessage(res);\n                }\n            });\n        }\n    };\n\n    // reset user password\n    const resetPassword = email => {\n        if (email.length > 10) {\n            handleResetPassword(email).then(res => {\n                console.log(res);\n                if (res.message) {\n                    const newMessage = {\n                        error: res.message,\n                    };\n                    setMessage(newMessage);\n                } else {\n                    setMessage(res);\n                }\n            });\n        } else {\n            const newMessage = {\n                error: 'At first input email address and try to login',\n            };\n            setMessage(newMessage);\n        }\n    };\n\n    return (\n        <div>\n            <Header></Header>\n            <div className=\"login-container\">\n                <p style={{ color: 'red' }}>{message.error}</p>\n                <form className=\"login-form\" onSubmit={handleSubmit(onSubmit)}>\n                    {isCreateAccount ? <h2>Create Account</h2> : <h2>Login</h2>}\n\n                    {isCreateAccount && (\n                        <div>\n                            <input\n                                name=\"firstName\"\n                                placeholder=\"Your first name\"\n                                ref={register({\n                                    required: {\n                                        value: true,\n                                        message: 'First Name is required',\n                                    },\n                                })}\n                            />\n                            <br />\n                            {errors.firstName && <span style={{ color: 'red' }}>{errors.firstName.message}</span>}\n                            <br />\n\n                            <input\n                                name=\"lastName\"\n                                placeholder=\"Your last name\"\n                                ref={register({\n                                    required: {\n                                        value: true,\n                                        message: 'Last Name is required',\n                                    },\n                                })}\n                            />\n                            <br />\n                            {errors.lastName && <span style={{ color: 'red' }}>{errors.lastName.message}</span>}\n                            <br />\n                        </div>\n                    )}\n\n                    <input\n                        name=\"email\"\n                        placeholder=\"Your email address\"\n                        ref={register({\n                            required: 'Required',\n                            pattern: { value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i, message: 'invalid email address' },\n                        })}\n                    />\n                    <br />\n                    {errors.email && <span style={{ color: 'red' }}>{errors.email.message}</span>}\n                    <br />\n\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder=\"Your password\"\n                        ref={register({\n                            minLength: {\n                                value: 8,\n                                message: 'password must have min length of 8',\n                            },\n                            required: {\n                                value: true,\n                                message: 'password is required',\n                            },\n                            maxLength: {\n                                value: 25,\n                                message: 'password must have max length of 25',\n                            },\n                        })}\n                    />\n                    <br />\n                    {errors.password && <span style={{ color: 'red' }}>{errors.password.message}</span>}\n                    <br />\n\n                    {isCreateAccount && (\n                        <div>\n                            <input\n                                type=\"password\"\n                                name=\"repeatPassword\"\n                                ref={register({\n                                    validate: value => value === watch('password') || \"Passwords don't match.\",\n                                })}\n                                placeholder=\"Repeat Password\"\n                                required\n                            />\n                            {errors.repeatPassword && <span style={{ color: 'red' }}>{errors.repeatPassword.message}</span>}\n                            <br />\n                            <br />\n                        </div>\n                    )}\n\n                    {!isCreateAccount && (\n                        <p style={{ color: 'orange', cursor: 'pointer' }} onClick={() => resetPassword(userEmail)}>\n                            Forget Password\n                        </p>\n                    )}\n\n                    {isCreateAccount ? <input type=\"submit\" className=\"submit-btn\" value=\"Create account\" /> : <input className=\"submit-btn\" type=\"submit\" value=\"Login\" />}\n\n                    {isCreateAccount ? (\n                        <p>\n                            already have an account!\n                            <span className=\"create-account\" onClick={() => createAccountForm(!isCreateAccount)}>\n                                Login here\n                            </span>\n                        </p>\n                    ) : (\n                        <p>\n                            Don't have account?\n                            <span className=\"create-account\" onClick={() => createAccountForm(!isCreateAccount)}>\n                                Create an account\n                            </span>\n                        </p>\n                    )}\n                </form>\n                <h5>or</h5>\n                <hr />\n                <button className=\"sign-in-btn\" onClick={googleSignIn}>\n                    <img src=\"https://i.ibb.co/DpHxMj0/google.png\" alt=\"\" /> Continue with Google\n                </button>\n                <br />\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useContext } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { UserContext } from '../../App';\n\nconst PrivateRoute = ({ children, ...rest }) => {\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                loggedInUser.name ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: '/login',\n                            state: { from: location },\n                        }}\n                    />\n                )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport Header from '../Header/Header';\n\nconst Progress = () => {\n    return (\n        <div>\n            <Header></Header>\n            <div style={{ color: 'green', textAlign: 'center', marginTop: '60px' }}>\n                <h1>In Progress...........</h1>\n            </div>\n        </div>\n    );\n};\n\nexport default Progress;","import { faEnvelope, faEnvelopeSquare, faSms, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport Footer from '../../Footer/Footer';\r\nimport Header from '../Header/Header';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <div style={{ overflowX: 'hidden' }}>\r\n            <Header />\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-md-8 col-lg-6 pb-5\">\r\n                    <form>\r\n                        <div className=\"card border-dark rounded-0\">\r\n                            <div className=\"card-header p-0\">\r\n                                <div className=\"bg-dark text-white text-center py-2\">\r\n                                    <h3>\r\n                                        <FontAwesomeIcon icon={faEnvelope} className=\"mr-1\" />\r\n                                        Contact Us\r\n                                    </h3>\r\n                                    <p className=\"m-0\">Feel free to contact us</p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-body p-3\">\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-group mb-2\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <div className=\"input-group-text\">\r\n                                                <FontAwesomeIcon icon={faUser} className=\"text-dark\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"nombre\" name=\"nombre\" placeholder=\"Your Full Name\" required />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-group mb-2\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <div className=\"input-group-text\">\r\n                                                <FontAwesomeIcon icon={faEnvelopeSquare} className=\"text-dark\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <input type=\"email\" className=\"form-control\" id=\"nombre\" name=\"email\" placeholder=\"Email address, ex:abc@gmail.com\" required />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <div className=\"input-group mb-2\">\r\n                                        <div className=\"input-group-prepend\">\r\n                                            <div className=\"input-group-text\">\r\n                                                <FontAwesomeIcon icon={faSms} className=\"text-dark\" />\r\n                                            </div>\r\n                                        </div>\r\n                                        <textarea className=\"form-control\" placeholder=\"Your Message\" required></textarea>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"text-center\">\r\n                                    <input type=\"submit\" value=\"Send\" className=\"btn btn-dark btn-block rounded-0 py-2\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport Footer from '../../Footer/Footer';\r\nimport Header from '../Header/Header';\r\n\r\nconst Helpline = () => {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                <div style={{ height: '60vh' }}>\r\n                    <h2 className=\"text-warning text-center\">Contact us</h2>\r\n\r\n                    <h3>phone: +238972938429</h3>\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Helpline;\r\n","import React, { createContext, useState } from 'react';\nimport './App.css';\n// import Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport PageNotFound from './components/PageNotFound/PageNotFound';\nimport Booking from './components/Booking/Booking';\nimport NearestHospital from './components/NearestHospital/NearestHospital';\nimport Login from './components/Login/Login';\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\nimport Progress from './components/Progress/Progress';\nimport Contact from './components/Contact/Contact';\nimport Helpline from './components/Helpline/Helpline';\n\nexport const UserContext = createContext();\n\nfunction App() {\n    const userDetails = localStorage.getItem('user');\n    let parseUser = JSON.parse(userDetails);\n    if (!parseUser) {\n        parseUser = {};\n    }\n\n    const [loggedInUser, setLoggedInUser] = useState(parseUser);\n    return (\n        <UserContext.Provider value={[loggedInUser, setLoggedInUser]}>\n            <Router>\n                <Switch>\n                    <Route path=\"/home\">\n                        <Home></Home>\n                    </Route>\n\n                    <PrivateRoute path=\"/booking/:locationName\">\n                        <Booking></Booking>\n                    </PrivateRoute>\n\n                    <Route path=\"/nearestHospital\">\n                        <NearestHospital></NearestHospital>\n                    </Route>\n\n                    <Route path=\"/login\">\n                        <Login></Login>\n                    </Route>\n                    <Route path=\"/contact\">\n                        <Contact />\n                    </Route>\n                    <Route path=\"/helpline\">\n                        <Helpline />\n                    </Route>\n                    <Route path=\"/progress\">\n                        <Progress></Progress>\n                    </Route>\n                    <Route exact path=\"/\">\n                        <Home></Home>\n                    </Route>\n\n                    <Route path=\"*\">\n                        <PageNotFound></PageNotFound>\n                    </Route>\n                </Switch>\n            </Router>\n        </UserContext.Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brand_logo.ca98e2d9.png\";"],"sourceRoot":""}